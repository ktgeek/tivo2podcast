#!/usr/bin/env ruby
# Copyright 2010 Keith T. Garner. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#    1. Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#    2. Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#
# You must have tivodecode for this to work.
# Your tivo mak will be read out of ~/.tivodecode_mak if it is available

# Adds the lib path next to the path the script is in to the head of
# the search patch
$:.unshift File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib',
                                      'tivo'))

require 'optparse'
require 'TiVo'
require 'TiVo-utils.rb'
require 'ansi/progressbar'

def make_filename(tivo_item)
  name = tivo_item.title
  ep = tivo_item.episode_title
  name = name + "-" + ep unless ep.nil?
  unless ep.nil? || tivo_item.episode_number.nil?
    name = name + "-" + tivo_item.episode_number
  end
  name.sub!(/:/, '_')
  name.sub!(/\//, '_')
  name = name + ".mpg"
  return name
end

# Load the mak if we have a mak file
mak_file = ENV['HOME'] + '/.tivodecode_mak'
mak = nil
mak = File.read(mak_file).strip if File.exist?(mak_file)

# Parse the options to get the rest (or override the above)
tivo_name,tivo_addr = nil, nil
decode = true
opts = OptionParser.new
opts.on('-m MAK', '--mak MAK', 'The TiVo\'s media access key') { |k| mak = k }
opts.on('-t IP', '--tivo IP', 'The IP address of your TiVo') do |ip|
  tivo_addr = ip
end
opts.on('-d', '--no-decode', 'Will not use tivodecode.') { |d| decode = false }
opts.on('-n NAME', '--tivo_name NAME',
        'The name assigned to the tivo via the my.tivo service') do |n|
  tivo_name = n
end
opts.on_tail('-h', '--help', 'Show this message') do
  puts opts
  exit
end
opts.parse(ARGV)

if tivo_addr.nil?
  tivo_addr = TiVo.locate_via_dnssd(tivo_name)
  $stderr.puts "TiVo not found!" if tivo_addr.nil?
end

if (tivo_addr.nil? && tivo_name.nil?) || mak.nil?
  puts "Must have TiVo IP address and MAK to function."
  exit(1)
end

tivo = TiVo::TiVo.new(tivo_addr, mak)

downloads = TiVo::Utils::do_menu(tivo.get_listings)

downloads.each do |dl|
  tivo = TiVo::TiVo.new(tivo_addr, mak)
  dl_name = make_filename(dl)

  puts "Attemping to download " + dl.printable_title()
  if decode
    IO.popen("tivodecode -n -o \"#{dl_name}\" -", 'wb') do |td|
      pbar = ANSI::ProgressBar.new(dl_name, dl.size)
      tivo.download_show(dl) do |tc|
        td << tc
        pbar.inc(tc.length)
      end
      pbar.finish
      puts
    end
  else
    File.open(dl_name, 'wb') do |file|
      pbar = ANSI::ProgressBar.new(dl_name, dl.size)
      tivo.download_show(dl) do |tc|
        file << tc
        pbar.inc(tc.length)
      end
      pbar.finish
      puts
    end
  end
  sleep 60
end

# Local Variables:
# mode: ruby
# End:
