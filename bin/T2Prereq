#!/usr/bin/env ruby
# Copyright 2011 Keith T. Garner. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#    1. Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#    2. Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.

class Requirement
  attr_reader :reqname, :name, :url

  def initialize(reqname, name, url)
    @reqname, @name, @url = reqname, name, url
    @found = false
  end

  def found?
    @found
  end

  def test
    begin
      require @reqname
      @found = true
    rescue LoadError
      @found = false
    end
  end
end

puts "This script will tell you if you've got all the prerequesits for Tivo2Podcast installed."

packages = %w/sqlite3 ansi\/progressbar httpclient dnssd/

packages = [Requirement.new('sqlite3', 'SQLite3 Bindings',
                            'http://rubygems.org/gems/sqlite3-ruby'),
            Requirement.new('ansi/progressbar', 'ANSI',
                            'http://rubygems.org/gems/ansi'),
            Requirement.new('httpclient', 'httpclient',
                            'http://rubygems.org/gems/httpclient'),
            Requirement.new('dnssd', 'DNS Service Discovery API for Ruby',
                            'http://rubygems.org/gems/dnssd'),
            Requirement.new('ffi', 'Foreign Function Interface for Ruby',
                            'http://rubygems.org/games/ffi')]

puts "Trying without rubygems"
packages.each { |p| p.test }

found_rubygems = false
begin
  require 'rubygems'
  found_rubygems = true
rescue LoadError
  found_rubygems = false
end

if found_rubygems
  puts "Trying unfound with rubygems"
  packages.select { |p| !p.found? }.each { |p| p.test }
else
  "Could not find rubygems, not trying to load the libraries with rubygems"
end

puts "Testing complete!\n\n"

packages.select { |p| !p.found? }.each do |p|
  puts "Missing #{p.name}!"
  puts "Please load #{p.reqname} from #{p.url}"
end

# Local Variables:
# mode: ruby
# End:
